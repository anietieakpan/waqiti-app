server:
  port: 8085

spring:
  application:
    name: integration-service
  datasource:
    url: jdbc:postgresql://localhost:5432/p2p_finance
    username: app_user
    password: ${DB_PASSWORD:strongpassword}
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: integration-service
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Fineract Configuration
fineract:
  base-url: https://localhost:8443/fineract-provider/api/v1
  username: mifos
  password: password
  tenant-id: default
  connection-timeout: 60000
  read-timeout: 60000

# Cyclos Configuration
cyclos:
  base-url: http://localhost:8888/api
  username: admin
  password: ${CYCLOS_ADMIN_PASSWORD:admin}
  use-api-key: false
  connection-timeout: 60000

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      fineractApi:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      cyclosApi:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  retry:
    instances:
      fineractApi:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
      cyclosApi:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

# Management
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  metrics:
    export:
      prometheus:
        enabled: true
  health:
    circuitbreakers:
      enabled: true

logging:
  level:
    root: INFO
    com.p2pfinance: DEBUG
    org.apache.fineract: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"