server:
  port: 8080

spring:
  application:
    name: api-gateway

  # Redis for rate limiting
  data:
    redis:
      host: localhost
      port: 6379

  # Cloud Gateway configuration
  cloud:
    gateway:
      default-filters:
        # Add correlation ID to each request
        - AddRequestHeader=X-Correlation-Id, ${random.uuid}
        # Enable retry for GET requests
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
              factor: 2
              basedOnPreviousValue: false

      # Global CORS configuration
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: '*'
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - PATCH
            allowedHeaders:
              - Authorization
              - Content-Type
              - X-Requested-With
            maxAge: 3600

# Service URLs
services:
  user-service:
    url: http://localhost:8081
  wallet-service:
    url: http://localhost:8082
  payment-service:
    url: http://localhost:8083
  notification-service:
    url: http://localhost:8084
  integration-service:
    url: http://localhost:8085

# Security
security:
  jwt:
    token:
      secret-key: ${JWT_SECRET:c3VwZXJzZWNyZXRrZXljYW50YnVzdA==} # Base64 encoded value

# Resilience4j circuit breaker configuration
resilience4j:
  circuitbreaker:
    instances:
      userServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
      walletServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
      paymentServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
      notificationServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
      integrationServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true

# Rate limiting
rate-limiter:
  # Default rate limits
  default:
    limit: 10
    refresh-period: 1s
  # IP-based rate limits
  ip:
    limit: 20
    refresh-period: 1s
  # User-based rate limits
  user:
    limit: 50
    refresh-period: 1s

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,circuitbreakers
  metrics:
    export:
      prometheus:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true

# Logging
logging:
  level:
    root: INFO
    com.waqiti: DEBUG
    org.springframework.cloud.gateway: DEBUG
    reactor.netty: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/${spring.application.name}.log