server:
  port: 8081

spring:
  application:
    name: user-service
  sleuth:
    sampler:
      probability: 1.0
  zipkin:
    base-url: ${ZIPKIN_URL:http://localhost:9411}



  
  # Database configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/waqiti
    username: app_user
    password: ${DB_PASSWORD:strongpassword}
  
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  
  # Database migrations
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  
  # Redis cache
  data:
    redis:
      host: localhost
      port: 6379
  
  # Kafka configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: user-service
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Integration service
integration-service:
  url: http://localhost:8085

# Security
security:
  jwt:
    token:
      secret-key: ${JWT_SECRET:c3VwZXJzZWNyZXRrZXljYW50YnVzdA==} # Base64 encoded value
      access-token-expire-length: 3600000 # 1 hour in milliseconds
      refresh-token-expire-length: 2592000000 # 30 days in milliseconds

# Resilience4j configuration
resilience4j:
  circuitbreaker:
    instances:
      integrationService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  retry:
    instances:
      integrationService:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

# Logging
logging:
  level:
    root: INFO
    com.waqiti: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/${spring.application.name}.log

# Management endpoints
management:
  tracing:
    sampling:
      probability: 1.0
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true



  endpoints:
    web:
      exposure:
        include: health,info,prometheus.metrics
  endpoint:
    health:
      show-details: always


